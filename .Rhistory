library(datasets)
data(airquality)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = .~Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
rm(list=ls())
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=.4, col="red")
5
12
abline(h=.05, col="green")
dist(dFsm)
dist(hc)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
rm(list=ls())
library(swirl)
swirl()
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, 3)
kmObj$iter
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col=c("black","red","green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans((dataFrame, 6)$cluster), pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
rm(list=ls())
rm(list=sl())
rm(list=ls())
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1]*svd1$d[1])%*%t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2]%*%diag(svd1$d[1:2])%*%t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5]%*%diag(svd1$d[1:5])%*%t(svd1$v[,1:5]))
myImage(svd1$u[,1:10]%*%diag(svd1$d[1:10])%*%t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, bool(ssd$subject == 1))
?subset
sub1 <- subset(ssd, ssd$subject == 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass((sub1$activity)))
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12], maxCon)
mdist <- dist(concat(sub1[,10:12], maxCon))
?dist
maxCon
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1, centers = 6)
kClust <- kmeans(sub1[,1:561], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClus$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
kClustb <- table(kClust$cluster, sub1$activity, nstart = 100)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart nstart = 100)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kCl)
laying <- which(kClust$size==29)
plot(kClust$centers[â—‹laying,1:12], pch = 19, ylab = "Laying Cluster")
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
rm(list=ls())
rm(list=ls())
library(swirl)
siwrl()
swirl()
dim(pm0)
head(pm0)
cnames
strsplit(cnames, '|', fixed = TRUE)
cnames <- strsplit(cnames, '|', fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log(x1)
boxplot(log10(x0), log(x1))
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character((dates)), "%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, pm0$State.Code == 36, pm0$county.site %in% both)
cnt0 <- subset(pm0, pm0$State.Code == 36 & pm0$county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), c(4, 4, 2, 1))
par(mfrow = c(1,2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y,]
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
mean <- mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)
knitr::opts_chunk$set(echo = TRUE)
if (!require("dplyr")) {
install.packages("dplyr")
}
if (!require("lattice")) {
install.packages("lattice")
}
if (!require("ggplot2")) {
install.packages("ggplot2")
}
if (!file.exists("activity.csv")) {
unzip("./activity.zip")
}
data <- read.csv("activity.csv")
str(data)
totalNumberOfStepsPerDay <- with(data, aggregate(steps, by = list(date), sum))
names(totalNumberOfStepsPerDay)[1] <- "Date"
names(totalNumberOfStepsPerDay)[2] <- "Total.Number.Of.Steps"
barplot(totalNumberOfStepsPerDay$Total.Number.Of.Steps,
col="red",
main = "Number of steps per day" ,
xlab ="Date" ,
ylab = "Number of steps")
abline(h=median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE),
col="black",
lwd = 5)
abline(h=mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE),
col="green",
lty=3)
legend("top",
c("Mean","Median"),
lty = c(mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE),
median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)),
col = c("green", "black"),
bty = "n",
border = TRUE)
mean <- mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)
mean
median <- median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)
median
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Swensy/Desktop/Coursera/5 Reproducible Research/Week 2/RepData_PeerAssessment1")
if (!require("dplyr")) {
install.packages("dplyr")
}
if (!require("lattice")) {
install.packages("lattice")
}
if (!require("ggplot2")) {
install.packages("ggplot2")
}
if (!require("lubridate")) {
install.packages("lubridate")
}
if (!file.exists("activity.csv")) {
unzip("./activity.zip")
}
data <- read.csv("activity.csv")
table(data)
names(data)
str(data)
data <- mutate(data, date = ymd(data$date))
str(data)
totalNumberOfStepsPerDay <- with(data, aggregate(steps, by = list(date), sum))
names(totalNumberOfStepsPerDay)[1] <- "Date"
names(totalNumberOfStepsPerDay)[2] <- "Total.Number.Of.Steps"
mean <- mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)
median <- median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)
barplot(totalNumberOfStepsPerDay$Total.Number.Of.Steps,
col="red",
main = "Number of steps per day" ,
xlab ="Date" ,
ylab = "Number of steps")
abline(h=median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE), col="black", lwd = 5)
abline(h=mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE), col="green", lty=3)
legend("top", c("Mean","Median"),
lty = c(mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE), median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)), col = c("green", "black"), bty = "n",
border = TRUE)
averageNumberOfStepsPerInterval <- aggregate(steps~interval, data=data, mean)
indexMax <- which.max(averageNumberOfStepsPerInterval$steps)
averageNumberOfStepsPerInterval$steps[indexMax]
averageNumberOfStepsPerInterval$interval[indexMax]
plot(averageNumberOfStepsPerInterval$interval,
averageNumberOfStepsPerInterval$steps,
type = "l",
main = "Average number of steps per interval",
xlab = "Interval",
ylab = "Average number of steps")
points(averageNumberOfStepsPerInterval$interval[max2], averageNumberOfStepsPerInterval$steps[max2])
if (!file.exists("activity.csv")) {
unzip("./activity.zip")
}
data <- read.csv("activity.csv")
if (!file.exists("activity.csv")) {
unzip("./activity.zip")
}
data <- read.csv("activity.csv")
str(data)
if (!file.exists("activity.csv")) {
unzip("./activity.zip")
}
data <- read.csv("activity.csv")
str(data)
totalNumberOfStepsPerDay <- with(data, aggregate(steps, by = list(date), sum))
names(totalNumberOfStepsPerDay)[1] <- "Date"
names(totalNumberOfStepsPerDay)[2] <- "Total.Number.Of.Steps"
if (!file.exists("activity.csv")) {
unzip("./activity.zip")
}
data <- read.csv("activity.csv")
str(data)
totalNumberOfStepsPerDay <- with(data, aggregate(steps, by = list(date), sum))
names(totalNumberOfStepsPerDay)[1] <- "Date"
names(totalNumberOfStepsPerDay)[2] <- "Total.Number.Of.Steps"
barplot(totalNumberOfStepsPerDay$Total.Number.Of.Steps,
col="red",
main = "Number of steps per day" ,
xlab ="Date" ,
ylab = "Total number of steps")
abline(h=median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE),
col="black",
lwd = 5)
abline(h=mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE),
col="green",
lty=3,
lwd=2)
legend("top",
c("Mean","Median"),
lty = c(mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE),
median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)),
col = c("green", "black"),
bty = "n",
border = TRUE)
if (!file.exists("activity.csv")) {
unzip("./activity.zip")
}
data <- read.csv("activity.csv")
str(data)
totalNumberOfStepsPerDay <- with(data, aggregate(steps, by = list(date), sum))
names(totalNumberOfStepsPerDay)[1] <- "Date"
names(totalNumberOfStepsPerDay)[2] <- "Total.Number.Of.Steps"
barplot(totalNumberOfStepsPerDay$Total.Number.Of.Steps,
col="red",
main = "Number of steps per day" ,
xlab ="Date" ,
ylab = "Total number of steps")
abline(h=median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE),
col="black",
lwd = 5)
abline(h=mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE),
col="green",
lty=3,
lwd=2)
legend("top",
c("Mean","Median"),
lty = c(mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE),
median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)),
col = c("green", "black"),
bty = "n",
border = TRUE)
mean <- mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)
mean
median <- median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)
median
if (!file.exists("activity.csv")) {
unzip("./activity.zip")
}
data <- read.csv("activity.csv")
str(data)
totalNumberOfStepsPerDay <- with(data, aggregate(steps, by = list(date), sum))
names(totalNumberOfStepsPerDay)[1] <- "Date"
names(totalNumberOfStepsPerDay)[2] <- "Total.Number.Of.Steps"
barplot(totalNumberOfStepsPerDay$Total.Number.Of.Steps,
col="red",
main = "Number of steps per day" ,
xlab ="Date" ,
ylab = "Total number of steps")
abline(h=median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE),
col="black",
lwd = 5)
abline(h=mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE),
col="green",
lty=3,
lwd=2)
legend("top",
c("Mean","Median"),
lty = c(mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE),
median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)),
col = c("green", "black"),
bty = "n",
border = TRUE)
mean <- mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)
mean
median <- median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)
median
library(dplyr)
averageNumberOfStepsPerInterval <- aggregate(steps~interval, data=data, mean)
averageNumberOfStepsPerInterval <- aggregate(steps~interval, data=data, mean)
indexMax <- which.max(averageNumberOfStepsPerInterval$steps)
averageNumberOfStepsPerInterval$steps[indexMax]
averageNumberOfStepsPerInterval$interval[indexMax]
plot(averageNumberOfStepsPerInterval$interval,
averageNumberOfStepsPerInterval$steps,
type = "l",
main = "Average number of steps per interval",
xlab = "Interval",
ylab = "Average number of steps")
points(averageNumberOfStepsPerInterval$interval[max2], averageNumberOfStepsPerInterval$steps[max2])
if (!require("dplyr")) {
install.packages("dplyr")
}
if (!require("lattice")) {
install.packages("lattice")
}
if (!require("ggplot2")) {
install.packages("ggplot2")
}
if (!require("lubridate")) {
install.packages("lubridate")
}
data <- read.csv("activity.csv")
averageNumberOfStepsPerInterval <- aggregate(steps~interval, data=data, mean)
rm(list=ls())
data <- read.csv("activity.csv")
averageNumberOfStepsPerInterval <- aggregate(steps~interval, data=data, mean)
totalNumberOfStepsPerDay <- with(data, aggregate(steps, by = list(date), sum))
averageNumberOfStepsPerInterval <- aggregate(steps~interval, data=data, mean)
names(totalNumberOfStepsPerDay)[1] <- "Date"
names(totalNumberOfStepsPerDay)[2] <- "Total.Number.Of.Steps"
averageNumberOfStepsPerInterval <- aggregate(steps~interval, data=data, mean)
mean <- mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)
median <- median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)
averageNumberOfStepsPerInterval <- aggregate(steps~interval, data=data, mean)
averageNumberOfStepsPerInterval <- aggregate(steps~interval, data=data, mean)
rm(list=ls())
data <- read.csv("activity.csv")
totalNumberOfStepsPerDay <- with(data, aggregate(steps, by = list(date), sum))
names(totalNumberOfStepsPerDay)[1] <- "Date"
names(totalNumberOfStepsPerDay)[2] <- "aa"
mean <- mean(totalNumberOfStepsPerDay$aa, na.rm = TRUE)
median <- median(totalNumberOfStepsPerDay$aa, na.rm = TRUE)
averageNumberOfStepsPerInterval <- aggregate(steps~interval, data=data, mean)
mean <- mean(totalNumberOfStepsPerDay$aa, na.rm = FALSE)
mean
rm(list=ls())
data <- read.csv("activity.csv")
totalNumberOfStepsPerDay <- with(data, aggregate(steps, by = list(date), sum))
names(totalNumberOfStepsPerDay)[1] <- "Date"
names(totalNumberOfStepsPerDay)[2] <- "aa"
mean(totalNumberOfStepsPerDay$aa, na.rm = TRUE)
averageNumberOfStepsPerInterval <- aggregate(steps~interval, data=data, mean)
if (!file.exists("activity.csv")) {
unzip("./activity.zip")
}
data <- read.csv("activity.csv")
str(data)
totalNumberOfStepsPerDay <- with(data, aggregate(steps, by = list(date), sum))
names(totalNumberOfStepsPerDay)[1] <- "Date"
names(totalNumberOfStepsPerDay)[2] <- "Total.Number.Of.Steps"
barplot(totalNumberOfStepsPerDay$Total.Number.Of.Steps,
col="red",
main = "Number of steps per day" ,
xlab ="Date" ,
ylab = "Total number of steps")
abline(h=median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE),
col="black",
lwd = 5)
abline(h=mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE),
col="green",
lty=3,
lwd=2)
legend("top",
c("Mean","Median"),
lty = c(mean(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE),
median(totalNumberOfStepsPerDay$Total.Number.Of.Steps, na.rm = TRUE)),
col = c("green", "black"),
bty = "n",
border = TRUE)
library(dplyr)
averageNumberOfStepsPerInterval <- aggregate(steps~interval, data=data, mean)
indexMax <- which.max(averageNumberOfStepsPerInterval$steps)
averageNumberOfStepsPerInterval$steps[indexMax]
averageNumberOfStepsPerInterval$interval[indexMax]
plot(averageNumberOfStepsPerInterval$interval,
averageNumberOfStepsPerInterval$steps,
type = "l",
main = "Average number of steps per interval",
xlab = "Interval",
ylab = "Average number of steps")
points(averageNumberOfStepsPerInterval$interval[indexMax], averageNumberOfStepsPerInterval$steps[indexMax], pch = 3)
sum(is.na(data$steps))
dataWithoutNA <- data
for (i in 1:dim(dataWithoutNA)[1])
{
if (is.na(dataWithoutNA$steps[i]))
{
dataWithoutNA$steps[i] = data3$steps[data3$interval == data$interval[i]]
}
}
View(data)
